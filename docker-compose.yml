version: '3.9'

services:
  web:
    build: ./app
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    gunicorn numbers_project.wsgi:application --bind 0.0.0.0:80" 
    volumes:
      - ./app/:/usr/src/app/
      - static:/usr/src/app/static/
    env_file: .env
    networks:
      - my_network
    depends_on:
      db:
        condition: service_healthy
  nginx: 
      build: ./nginx 
      ports: 
      - ${APP_PORT}:80
      networks:
        - my_network
      volumes:
        - static:/usr/src/app/static/
      depends_on:
       - web 
      restart: "on-failure" 
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${SQL_DATABASE}"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s  

volumes:
  postgres_data:
  static:
networks:
  my_network:
